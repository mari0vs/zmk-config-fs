// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&sk {
    release-after-ms = <10000>;
};

/ {
    behaviors {

        lo: layer_mo {
            label = "layer_mo";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <250>;
            quick-tap-ms = <500>;
            bindings = <&mo>, <&kp>;
        };

        hm: homerow_mods {
            label = "homerow_mods";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <350>;
            quick-tap-ms = <500>;
            bindings = <&sk>, <&kp>;
        };

        td_comma: tap_dance_comma {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_comma";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp COMMA>, <&kp SEMI>;
        };

        td_dot: tap_dance_dot {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_dot";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp DOT>, <&kp COLON>;
        };

        td_grave: tap_dance_grave {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_grave";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp GRAVE>, <&kp TILDE>;
        };

        td_minus: tap_dance_minus {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_minus";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp MINUS>, <&kp UNDER>;
        };

        td_equal: tap_dance_equal {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_equal";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp EQUAL>, <&kp PLUS>;
        };

        td_bslh: tap_dance_bslh {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_bslh";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp BSLH>, <&kp PIPE>;
        };

        td_brc: tap_dance_brc {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_brc";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        td_bkt: tap_dance_bkt {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_bkt";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        td_par: tap_dance_par {
            compatible = "zmk,behavior-tap-dance";
            label = "tap_dance_par";
            #binding-cells = <0>;
            tapping-term-ms = <250>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <60>;
            layers = <0>;
            key-positions = <1 2>;
            bindings = <&kp ESC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <

            &kp P       &kp Y       &kp F       &kp G       &kp SQT             &kp FSLH    &kp H       &kp J       &kp K       &kp L

            &hm LGUI A  &hm LALT O  &hm LCTRL I &hm LSHFT E &kp U               &kp R       &hm LSHFT T &hm LCTRL N &hm LALT D  &hm LGUI S

            &kp Z       &kp X       &kp C       &kp V       &td_comma           &td_dot     &kp B       &kp M       &kp W       &kp Q

                                                &lo 3 TAB   &lo 1 BSPC          &lo 2 SPACE &lo 4 RET
            >;
        };

        SYM_layer {
            bindings = <

            &none       &none       &none       &none       &none               &none       &td_equal   &td_minus   &td_grave   &none

            &kp LGUI    &kp LALT    &kp LCTRL   &kp LSHFT   &none               &none       &td_par     &td_bkt     &td_brc     &td_bslh
    
            &none       &none       &none       &none       &none               &none       &none       &none       &none       &none

                                                &trans      &trans              &trans      &trans

            >;
        };

        NUM_layer {
            bindings = <

            &none       &kp N1      &kp N2      &kp N3      &none               &none       &none       &none       &none       &none

            &kp N0      &kp N4      &kp N5      &kp N6      &none               &none       &kp LSHFT   &kp LCTRL   &kp LALT    &kp LGUI
    
            &none       &kp N7      &kp N8      &kp N9      &none               &none       &none       &none       &none       &none

                                                &trans      &trans              &trans      &trans

            >;
        };

        NAV_layer {
            bindings = <

            &none       &none       &none       &none       &none               &none       &kp HOME    &kp PG_DN   &kp PG_UP   &kp END

            &kp LSHFT   &kp LGUI    &kp LALT    &kp LCTRL   &kp CAPS            &kp DEL     &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT

            &none       &none       &none       &none       &none               &none       &none       &none       &none       &none

                                                &trans      &trans              &trans      &trans

            >;
        };

        FN_layer {
            bindings = <

            &kp F1      &kp F1      &kp F3      &kp F4      &none               &none       &none       &none       &none       &none

            &kp F5      &kp F6      &kp F7      &kp F8      &none               &kp CAPS    &kp LSHFT   &kp LCTRL   &kp LALT    &kp LGUI

            &kp F9      &kp F10     &kp F11     &kp F12     &none               &none       &none       &none       &none       &none

                                                &trans      &trans              &trans      &trans

            >;
        };
    };
};
